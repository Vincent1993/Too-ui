@import 'animations';

@mixin hairline-common($color, $direction) {
  position: absolute;
  z-index: 2;

  content: '';
  transform-origin: 100% 50%;

  background-color: $color;

  @if $direction == top {
    transform: scaleY(0.5);
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33);
    }
  } @else if $direction == bottom {
    transform: scaleY(0.5);
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33);
    }
  } @else if $direction == left {
    transform: scaleX(0.5);
    @media (min-resolution: 3dppx) {
      transform: scaleX(0.33);
    }
  } @else if $direction == right {
    transform: scaleX(0.5);
    @media (min-resolution: 3dppx) {
      transform: scaleX(0.33);
    }
  }
}

@mixin hairline(
  $direction: 'all',
  $color: $border-color-base,
  $radius: 0,
  $size: $border-width-base
) {
  @if $direction == 'top' {
    &:after {
      top: 0;
      right: auto;
      bottom: auto;
      left: 0;

      width: 200%;
      height: $size;

      transform-origin: 50% 0;

      @include hairline-common($color, $direction);
    }
  } @else if $direction == 'bottom' {
    &:before {
      top: auto;
      right: auto;
      bottom: 0;
      left: 0;

      width: 200%;
      height: $size;

      transform-origin: 50% 100%;

      @include hairline-common($color, $direction);
    }
  } @else if $direction == 'left' {
    &:after {
      top: 0;
      right: auto;
      bottom: auto;
      left: 0;

      width: $size;
      height: 100%;

      transform-origin: 0 50%;

      @include hairline-common($color, $direction);
    }
  } @else if $direction == 'right' {
    &:before {
      top: 0;
      right: 0;
      bottom: auto;
      left: auto;

      width: $size;
      height: 100%;

      transform-origin: 100% 50%;

      @include hairline-common($color, $direction);
    }
  } @else {
    &:after {
      position: absolute;
      top: 0;
      right: auto;
      bottom: auto;
      left: 0;

      box-sizing: border-box;
      width: 200%;
      height: 200%;

      content: '';
      transform: scale(0.5);
      transform-origin: 0 0;
      pointer-events: none;

      border: $size solid $color;
      border-radius: $radius * 2;
      @content;
    }
  }
}

@mixin hairlineRemove($direction: 'all') {
  @if $direction == 'all' {
    &:after {
      display: none;
    }
  } @else if $direction == 'right' {
    &:before {
      display: none;
    }
  } @else if $direction == 'left' {
    &:after {
      display: none;
    }
  } @else if $direction == 'top' {
    &:after {
      display: none;
    }
  } @else if $direction == 'bottom' {
    &:before {
      display: none;
    }
  }
}
@mixin loading() {
  position: relative;

  display: block;

  width: 1em;
  height: 1em;

  content: '';
  animation: spinAround 500ms infinite linear;

  border: 2px solid $border-color-base;
  border-top-color: transparent;
  border-right-color: transparent;
  border-radius: $radius-circle;
}

@mixin center($width, $height: 0) {
  position: absolute;
  @if $height != 0 {
    top: calc(50% - (#{$height} / 2));
    left: calc(50% - (#{$width} / 2));
  } @else {
    top: calc(50% - (#{$width} / 2));
    left: calc(50% - (#{$width} / 2));
  }
}

@mixin block() {
  &:not(:last-child) {
    margin-bottom: 1.5rem;
  }
}

@mixin wordBreak() {
  word-wrap: break-word;
  word-break: break-all;
}

@mixin txtOverflow($num: 1, $lineHeight: 20) {
  @if $num == 1 {
    overflow: hidden;

    white-space: nowrap;
    text-overflow: ellipsis;
    word-break: break-word;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    -webkit-box-orient: vertical;

    max-height: $lineHeight * $num + px;

    text-overflow: ellipsis;
    word-break: break-word;

    line-height: $lineHeight + px;

    -webkit-line-clamp: $num;
  }
}

@mixin arrow($direction: 'right', $color: $color-text-base) {
  &:after {
    display: flex;
    align-items: center;

    padding: 3px;

    content: '';

    border: solid $color;
    border-width: 0 1px 1px 0;

    @if $direction == 'right' {
      transform: rotate(-45deg);
    } @else if $direction == 'left' {
      transform: rotate(135deg);
    } @else if $direction == 'up' {
      transform: rotate(-135deg);
    } @else {
      transform: rotate(45deg);
    }
  }
}
