@import './_mixins.scss';
@import './_variables.scss';

.#{$prefix-name}-button {
  @include button-base;
  // Size map for medium, small
  @each $size in map-keys($button-size-map) {
    &.#{$size} {
      @include button-gutter($size);
    }
  }

  // Type map for primary, sencodary, warn, error
  @each $key in map-keys($button-color-map) {
    &.#{$key} {
      @include button-container-fill-color(
        map-get(map-get($button-color-map, $key), 'fill-color')
      );
      @include button-text-color(
        map-get(map-get($button-color-map, $key), 'text-color')
      );
      @include button-border(
        map-get(map-get($button-color-map, $key), 'border-color')
      );
      @include button-container-tab-fill-color(
        map-get(map-get($button-color-map, $key), 'tap-fill-color')
      );

      // Outline button
      &.outline {
        @include button-outline(
          map-get(map-get($button-color-map, $key), 'border-color')
        );
        @include button-container-tab-fill-color(
          map-get(map-get($button-color-map, $key), 'tap-fill-color')
        );
      }
      // Without border & background-fill button
      &.subtle {
        @include button-subtle(
          map-get(map-get($button-color-map, $key), 'fill-color')
        );
        @include button-container-tab-fill-color(
          map-get(map-get($button-color-map, $key), 'tap-fill-color')
        );
      }

      &.inactive {
        @include button-inactive;
      }
    }
  }

  &.block {
    @include button-block;
  }

  &.round {
    @include button-round;
  }
  &.loading {
    @include button-loading;
  }
  &.sticky {
    @include button-sticky;
  }
}
